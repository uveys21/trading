<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChatHistoryState">
    <option name="serializedSessions">
      <map>
        <entry key="1316d79b-81b3-4c49-8a26-0cee201e7830" value="{&quot;id&quot;:&quot;1316d79b-81b3-4c49-8a26-0cee201e7830&quot;,&quot;name&quot;:&quot;MainScreen ViewModel Unresolved References&quot;,&quot;timestamp&quot;:1748695006736,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt\npackage com.uveys.trader.presentation.ui.main\n\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.AccountBalance\nimport androidx.compose.material.icons.filled.Analytics\nimport androidx.compose.material.icons.filled.Home\nimport androidx.compose.material.icons.filled.Settings\nimport androidx.compose.material3.*\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.vector.ImageVector\nimport androidx.compose.ui.unit.dp\nimport androidx.hilt.navigation.compose.hiltViewModel\nimport androidx.navigation.NavDestination.Companion.hierarchy\nimport androidx.navigation.NavGraph.Companion.findStartDestination\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.currentBackStackEntryAsState\nimport androidx.navigation.compose.rememberNavController\nimport com.uveys.trader.presentation.ui.main.home.HomeScreen\nimport com.uveys.trader.presentation.ui.main.portfolio.PortfolioScreen\nimport com.uveys.trader.presentation.ui.main.settings.SettingsScreen\nimport com.uveys.trader.presentation.ui.main.trading.TradingScreen\nimport com.uveys.trader.presentation.viewmodel.MainViewModel\nimport com.uveys.trader.presentation.viewmodel.MainUiState\nimport androidx.compose.runtime.State\nimport androidx.compose.runtime.collectAsState\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.remember\nimport androidx.lifecycle.compose.collectAsState\n\n/**\n * Ana ekran - Bottom Navigation ile 4 farklı ekran arasında geçiş sağlar\n */\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun MainScreen(\n    onNavigateToAuth: () -\u003e Unit,\n    viewModel: MainViewModel \u003d hiltViewModel()\n) {\n    val navController \u003d rememberNavController()\n    val uiState: State\u003cMainUiState\u003e \u003d remember { viewModel.uiState.collectAsState() }\n    \n    Scaffold(\n        topBar \u003d {\n            TopAppBar(\n                title \u003d { Text(\&quot;Uveys Trader\&quot;) },\n                actions \u003d {\n                    Text(\n                        text \u003d \&quot;Bakiye: ${uiState.value.balance} USDT\&quot;,\n                        modifier \u003d Modifier.padding(end \u003d 16.dp)\n                    )\n                }\n            )\n        },\n        bottomBar \u003d {\n            NavigationBar {\n                val navBackStackEntry by navController.currentBackStackEntryAsState()\n                val currentDestination \u003d navBackStackEntry?.destination\n                \n                bottomNavItems.forEach { screen -\u003e\n                    NavigationBarItem(\n                        icon \u003d { Icon(screen.icon, contentDescription \u003d screen.label) },\n                        label \u003d { Text(screen.label) },\n                        selected \u003d currentDestination?.hierarchy?.any { it.route \u003d\u003d screen.route } \u003d\u003d true,\n                        onClick \u003d {\n                            navController.navigate(screen.route) {\n                                popUpTo(navController.graph.findStartDestination().id) {\n                                    saveState \u003d true\n                                }\n                                launchSingleTop \u003d true\n                                restoreState \u003d true\n                            }\n                        }\n                    )\n                }\n            }\n        }\n    ) { paddingValues -\u003e\n        NavHost(\n            navController \u003d navController,\n            startDestination \u003d Screen.Home.route,\n            modifier \u003d Modifier.padding(paddingValues)\n        ) {\n            composable(Screen.Home.route) {\n                HomeScreen(\n                    uiState \u003d uiState.value,\n                    onStartStrategy \u003d { symbol -\u003e viewModel.startStrategy(symbol) },\n                    onStopStrategy \u003d { viewModel.stopStrategy() }\n                )\n            }\n            composable(Screen.Trading.route) {\n                TradingScreen(\n                    uiState \u003d uiState.value,\n                    onPlaceOrder \u003d { symbol, side, positionSide, price, quantity -\u003e\n                        viewModel.placeOrder(symbol, side, positionSide, price, quantity)\n                    }\n                )\n            }\n            composable(Screen.Portfolio.route) {\n                PortfolioScreen(\n                    positions \u003d uiState.value.positions,\n                    orderHistory \u003d uiState.value.orderHistory\n                )\n            }\n            composable(Screen.Settings.route) {\n                SettingsScreen(\n                    onLogout \u003d {\n                        viewModel.logout()\n                        onNavigateToAuth()\n                    },\n                    onSetLeverage \u003d { leverage -\u003e viewModel.setLeverage(leverage) },\n                    onSetRiskPercentage \u003d { percentage -\u003e viewModel.setRiskPercentage(percentage) },\n                    currentLeverage \u003d uiState.value.leverage,\n                    currentRiskPercentage \u003d uiState.value.riskPercentage\n                )\n            }\n        }\n    }\n}\n\n/**\n * Bottom Navigation için ekran tanımları\n */\nsealed class Screen(val route: String, val label: String, val icon: ImageVector) {\n    object Home : Screen(\&quot;home\&quot;, \&quot;Ana Sayfa\&quot;, Icons.Default.Home)\n    object Trading : Screen(\&quot;trading\&quot;, \&quot;İşlem\&quot;, Icons.Default.Analytics)\n    object Portfolio : Screen(\&quot;portfolio\&quot;, \&quot;Portföy\&quot;, Icons.Default.AccountBalance)\n    object Settings : Screen(\&quot;settings\&quot;, \&quot;Ayarlar\&quot;, Icons.Default.Settings)\n}\n\nprivate val bottomNavItems \u003d listOf(\n    Screen.Home,\n    Screen.Trading,\n    Screen.Portfolio,\n    Screen.Settings\n)\n\n```\n\u003c/current_file\u003e\n\n\n\u003clinter_errors\u003e\n## Linter Errors\n\nPath: app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt\nErrors:\n\nLine 26: Unresolved reference \u0027MainUiState\u0027.\nLine 31: Unresolved reference \u0027compose\u0027.\nLine 43: Unresolved reference \u0027MainUiState\u0027.\nLine 43: @Composable invocations can only happen from the context of a @Composable function\nLine 51: Unresolved reference \u0027balance\u0027.\nLine 89: Unresolved reference \u0027startStrategy\u0027.\nLine 90: Unresolved reference \u0027stopStrategy\u0027.\nLine 97: Unresolved reference \u0027placeOrder\u0027.\nLine 103: Unresolved reference \u0027positions\u0027.\nLine 104: Unresolved reference \u0027orderHistory\u0027.\nLine 110: Unresolved reference \u0027logout\u0027.\nLine 113: Unresolved reference \u0027setLeverage\u0027.\nLine 114: Unresolved reference \u0027setRiskPercentage\u0027.\nLine 115: Unresolved reference \u0027leverage\u0027.\nLine 116: Unresolved reference \u0027riskPercentage\u0027.\n\u003c/linter_errors\u003e\n\u003c/additional_data\u003e\n\n\n\u003cuser_query\u003e\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:26:48 Unresolved reference: MainUiState\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:31:27 Unresolved reference: compose\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:43:24 Unresolved reference: MainUiState\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:43:68 Composable calls are not allowed inside the calculation parameter of inline fun \u003cT\u003e remember(crossinline calculation: () -\u003e TypeVariable(T)): TypeVariable(T)\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:89:61 Unresolved reference: startStrategy\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:90:50 Unresolved reference: stopStrategy\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:97:35 Unresolved reference: placeOrder\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:110:35 Unresolved reference: logout\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:113:61 Unresolved reference: setLeverage\ne: file:///C:/Users/uveys/Downloads/UveysTrader_1-20250528T235756Z-1-001/UveysTrader_1/UveysTrader/app/src/main/java/com/uveys/trader/presentation/ui/main/MainScreen.kt:114:69 Unresolved reference: setRiskPercentage\n\u003c/user_query\u003e&quot;}]}]}" />
        <entry key="d57d0d1c-a56f-456a-9cdc-4b802cfabc54" value="{&quot;id&quot;:&quot;d57d0d1c-a56f-456a-9cdc-4b802cfabc54&quot;,&quot;name&quot;:&quot;No Neutral Signal Warning Alert&quot;,&quot;timestamp&quot;:1748600774469,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\u003cuser_query\u003e\nnötr sinyal yok uyarısı alıyorum\n\u003c/user_query\u003e&quot;}]}]}" />
      </map>
    </option>
  </component>
</project>